The file input.txt contains a list of planets (name, mass in kg in scientific notation, average distance to the Sun in astronomical units. 

0. Create a class Planet that has the data members of name (type string), mass and distance (type double). Create this in its own separate files (.cc and .h) and define member setter and getter functions for each of the data members.

In you main program, while reading the file line-by-line, meaning planet by planet, for each line you will build a new object of type planet. Store all of them in a vector of planets, namely std::vector<Planet>. Test your setter and getter functions to ensure they work as expected.

1. You are familiar now with the std::sort of a std::vector which works by comparing two objects according to default criteria and deciding which comes first. To sort objects in your class, you need to define what the order is. For example, in order of mass starting with the largest? Or in alphabetical order? And so on. In fact, std::sort can take user-defined functions. Define three functions, all of which take two Planet objects and return a bool. These functions should have the same behaviour as the > operator and define whether:
a) a planet's name comes first alphabetically
b) a planet has a larger mass
c) a planet is at a greater distance from the sun

2. Print on each line the name of the planets, in alphabetical order.

3. Now Print on each line the name of the planet followed by its mass, in order of the mass. Same for distance to the sun. 

4. Print the planet with the smallest and largest mass. Same for distance to the sun. 

5. Compute the weighted average distance to the Sun of all the planets, defined as sum over the planets of mass times distance, and all divided by the sum of the masses of all planets (\frac{\Sum mi*di}{\Sum mi}). 

For this assignment, please hand in one set of source files (.cc and .h files of your Planet class and the files containing your main function) after you have completed all steps. There is no need to hand in a set of files after each step. You should additionally upload an output file containing the answers to steps 2, 3, 4 and 5.
